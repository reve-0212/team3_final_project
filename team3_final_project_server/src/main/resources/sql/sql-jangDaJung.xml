<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.team3_final_project_server.JangDaJung.JDJMapper">
    <!-- INSERT -->
<!--    <insert id="insertHistory" parameterType="com.example.team3_final_project_server.dto.ReservationHistoryDTO">-->
<!--        INSERT INTO reservation_history (-->
<!--        res_idx, reservation_idx, reservation_date,-->
<!--        male_count, female_count, gender_total_count,-->
<!--        menu_idx, menu_name, menu_price,-->
<!--        menu_sold_count, menu_sold_total_price,-->
<!--        checkout_date, cancel_date, reservation_team_count-->
<!--        )-->
<!--        VALUES (-->
<!--        #{resIdx}, #{reservationIdx}, #{reservationDate},-->
<!--        #{maleCount}, #{femaleCount}, #{genderTotalCount},-->
<!--        #{menuIdx}, #{menuName}, #{menuPrice},-->
<!--        #{menuSoldCount}, #{menuSoldTotalPrice},-->
<!--        #{checkoutDate}, #{cancelDate}, #{reservationTeamCount}-->
<!--        )-->
<!--    </insert>-->

<!--    통계 페이지 -->

    <!-- 메뉴 여러개 선택해서 예약할 수  있도록 history 저장 -->
    <insert id="insertHistories" parameterType="list">
        INSERT INTO reservation_history (
        res_idx, reservation_idx, reservation_date, rsv_man, rsv_woman, rsv_people, rsv_baby,
        menu_idx, menu_name, menu_price, menu_sold_count, menu_sold_total_price, reservation_team_count
        )
        VALUES
        <foreach collection="list" item="history" separator=",">
            (
            #{history.resIdx}, #{history.reservationIdx}, #{history.reservationDate},
            #{history.rsvMan}, #{history.rsvWoman}, #{history.rsvPeople}, #{history.rsvBaby},
            #{history.menuIdx}, #{history.menuName}, #{history.menuPrice}, #{history.menuSoldCount},
            #{history.menuSoldTotalPrice}, #{history.reservationTeamCount}
            )
        </foreach>
    </insert>

    <!-- 기간 조회 -->
    <select id="selectHistoryByDate" resultType="com.example.team3_final_project_server.dto.ReservationHistoryDTO">
        SELECT *
        FROM reservation_history
        WHERE reservation_date BETWEEN #{startDate} AND #{endDate}
    </select>

    <!--  성별-->
    <select id="selectVisitorGender" resultType="map">
        SELECT
            SUM(rsv_man) AS totalMan,
            SUM(rsv_woman) AS totalWoman,
            SUM(rsv_people) AS totalPeople,
            SUM(rsv_baby) AS totalBaby
        FROM reservation_history
        WHERE reservation_date BETWEEN #{startDate} AND #{endDate}
            AND res_idx = #{resIdx}
    </select>

<!--    메뉴 불러와서 판매량 계산 -->
    <select id="selectMenuSales" resultType="map">
        SELECT
            m.menu_name,
            m.menu_price,
            IFNULL(SUM(h.menu_sold_count), 0) AS soldCount,
            IFNULL(SUM(h.menu_sold_total_price), 0) AS soldTotalPrice
        FROM menu m
        LEFT JOIN reservation_history h
            ON m.menu_idx = h.menu_idx
            AND h.reservation_date BETWEEN #{startDate} AND #{endDate}
        WHERE m.res_idx = #{resIdx}
        GROUP BY m.menu_idx
    </select>

    <!--    시간대별 예약팀 수-->
    <select id="selectTeamCountByHour" resultType="map">
        SELECT
        HOUR(reservation_date) as hour,
        COUNT(DISTINCT reservation_idx) AS teamCount,
        SUM(rsv_people) AS visitorCount
        FROM reservation_history
        WHERE reservation_date BETWEEN #{startDate} AND #{endDate}
        AND res_idx = #{resIdx}
        GROUP BY HOUR(reservation_date)
        ORDER BY hour
    </select>

<!--    메뉴 페이지-->

<!--    메뉴 리스트 -->
    <select id="selectMenuList" resultType="com.example.team3_final_project_server.dto.MenuDTO">
        SELECT
            menu_idx AS menuIdx,
            res_idx AS resIdx,
            menu_name AS menuName,
            menu_price AS menuPrice,
            menu_explanation AS menuExplanation,
            menu_image AS menuImage,
            menu_hidden AS menuHidden,
            menu_sold_out AS menuSoldOut,
            menu_sort AS menuSort
        FROM menu
        WHERE res_idx = #{resIdx}
        ORDER BY menu_sort ASC
    </select>

<!--    메뉴 리스트 페이지에서 숨기기 해제-->
    <update id="updateUnhidden">
        UPDATE menu
        SET menu_hidden = #{menuHidden}
        WHERE menu_idx = #{menuIdx}
    </update>

<!--    메뉴 리스트 페이지에서 품절 해제-->
    <update id="updateUnSoldOut">
        UPDATE menu
        SET menu_sold_out = #{menuSoldOut}
        WHERE menu_idx = #{menuIdx}
    </update>

<!--    새 메뉴 등록-->
    <insert id="newMenu" parameterType="com.example.team3_final_project_server.dto.MenuDTO">
        INSERT INTO menu
            (res_idx, menu_name, menu_price, menu_explanation, menu_image, menu_hidden, menu_sold_out, menu_sort)
        VALUES
            (#{resIdx}, #{menuName}, #{menuPrice}, #{menuExplanation}, #{menuImage}, #{menuHidden}, #{menuSoldOut}, #{menuSort})
    </insert>

    <select id="selectMaxMenuSort" resultType="int">
        SELECT
            IFNULL(MAX(menu_sort), 0)
        FROM menu
        WHERE res_idx = #{resIdx}
    </select>

<!--    메뉴 리스트 수정 -->
    <update id="updateMenuList">
        UPDATE menu
        SET
            menu_sort = #{menuSort}
            menu_hidden = #{menuHidden}
            menu_sold_out = #{menuSoldOut}
        WHERE menu_idx = #{menuIdx}
    </update>
</mapper>
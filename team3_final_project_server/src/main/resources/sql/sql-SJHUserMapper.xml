<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.team3_final_project_server.SimJiHyun.mapper.UserMapper">

  <!--아이디로 사용자 조회 (로그인용)-->
  <select id="findByUserId" resultType="com.example.team3_final_project_server.dto.UserDTO" parameterType="String">
    SELECT * FROM user WHERE user_id = #{userId}
  </select>

  <!--이메일로 사용자 존재 여부 확인-->
  <select id="existsByUserEmail" resultType="boolean">
    SELECT COUNT(*) > 0 FROM user WHERE user_email = #{userEmail}
  </select>

  <!--아이디로 사용자 존재 여부 확인-->
  <select id="existsByUserId" resultType="boolean">
    SELECT COUNT(*) > 0 FROM user WHERE user_id = #{userId}
  </select>

  <!--회원 정보 저장-->
  <insert id="save" parameterType="com.example.team3_final_project_server.dto.UserDTO">
    INSERT INTO user (user_id, user_pass, user_name, user_email, role)
    VALUES (#{userId}, #{userPass}, #{userName}, #{userEmail}, #{role})
  </insert>

  <!--사용자 삭제-->
  <delete id="deleteByUserId">
    DELETE FROM user WHERE user_id = #{userId}
  </delete>

  <!--비밀번호 변경-->
  <update id="updatePassword">
    update user set user_pass = #{hashed} where user_id = #{userId}
  </update>

  <!--회원 정보 수정-->
  <update id="updateField">
    update user set ${field} = #{value} where user_id = #{userId}
  </update>

  <!--조인용 -->
  <resultMap id="reservationRestaurantJoinMap2"
             type="com.example.team3_final_project_server.dto.join.ReservationRestaurantJoinDTO">
    <association property="reservationDTO" javaType="com.example.team3_final_project_server.dto.ReservationDTO">
      <result column="reservation_idx" property="reservationIdx"/>
      <result column="rsv_people" property="rsvPeople"/>
      <result column="rsv_date" property="rsvDate"/>
      <result column="rsv_time" property="rsvTime"/>
      <result column="rsv_come_datetime" property="rsvComeDatetime"/>
      <result column="rsv_cancel_datetime" property="rsvCancelDatetime"/>
    </association>

    <association property="restaurantDTO" javaType="com.example.team3_final_project_server.dto.RestaurantDTO">
      <result column="res_idx" property="resIdx"/>
      <result column="res_name" property="resName"/>
    </association>
  </resultMap>

  <!--예약 리스트 가져오기-->
  <select id="userReservation" parameterType="int" resultMap="reservationRestaurantJoinMap2">
    select rsv.reservation_idx, rsv.rsv_people, rsv.rsv_date, rsv.rsv_time, rsv.rsv_come_datetime,
    rsv.rsv_cancel_datetime, res.res_idx, res.res_name
    from reservation as rsv
    join restaurant as res
    on rsv.res_idx = res.res_idx
    where rsv.user_idx=#{userIdx}
    order by rsv.rsv_date desc;
  </select>

  <!--  조인용 map-->
  <resultMap id="rrJoin" type="com.example.team3_final_project_server.dto.join.ReservationRestaurantJoinDTO">
    <association property="reservationDTO" javaType="com.example.team3_final_project_server.dto.ReservationDTO">
      <result column="reservation_idx" property="reservationIdx"/>
      <result column="rsv_people" property="rsvPeople"/>
      <result column="rsv_date" property="rsvDate"/>
      <result column="rsv_time" property="rsvTime"/>
    </association>
    <association property="restaurantDTO" javaType="com.example.team3_final_project_server.dto.RestaurantDTO">
      <result column="res_name" property="resName"/>
      <result column="res_lat" property="resLat"/>
      <result column="res_lng" property="resLng"/>
      <result column="res_introduce" property="resIntroduce"/>
    </association>
  </resultMap>

  <!--  예약 상세 정보 가져오기-->
  <select id="getBook" resultMap="rrJoin">
    select rsv.reservation_idx, rsv.rsv_people, rsv.rsv_date, rsv.rsv_time,
    res.res_name, res.res_lat, res.res_lng, res.res_introduce
    from reservation as rsv
    join restaurant as res
    on rsv.res_idx = res.res_idx
    where rsv.reservation_idx = #{reservationIdx}
    and res.res_idx = #{restaurantIdx};
  </select>

  <!--  예약 메뉴 상세 정보 보기 전용 map-->
  <resultMap id="rrsmJoinMap" type="com.example.team3_final_project_server.dto.join.RrsmDTO">
    <association property="menuDTO" javaType="com.example.team3_final_project_server.dto.MenuDTO">
      <result column="menu_name" property="menuName"/>
    </association>
    <association property="selectedMenuDTO" javaType="com.example.team3_final_project_server.dto.SelectedMenuDTO">
      <result column="menu_quantity" property="menuQuantity"/>
    </association>
  </resultMap>

  <!--  예약 메뉴 상세 정보 가져오기-->
  <select id="getMenu" parameterType="int" resultMap="rrsmJoinMap">
    select menu.menu_name, sm.menu_quantity
    from reservation as rsv
    join restaurant as res
    join selected_menu as sm
    join menu as menu
    on rsv.res_idx = res.res_idx
    and rsv.reservation_idx = sm.reservation_idx
    and sm.menu_idx = menu.menu_idx
    where rsv.reservation_idx = #{reservationIdx}
    and res.res_idx = #{restaurantIdx};
  </select>

  <!--예약 취소하기-->
  <update id="cancelBook" parameterType="int">
    update reservation
    set rsv_cancel_datetime = now()
    where reservation_idx = #{reservationIdx};
  </update>

  <!--  예약 번호 찾기-->
  <select id="searchResIdx" resultType="int">
    select reservation_idx
    from reservation
    where user_idx=#{userIdx}
    and res_idx=#{resIdx}
    and rsv_date=#{rsvDate}
    and rsv_time=#{rsvTime};
  </select>

  <!--  좌석 예약하기-->
  <insert id="reserveSeat">
    insert into selected_seat(reservation_idx, seat_id)
    values (#{reservationIdx}, #{seatId});
  </insert>

  <!--  메뉴 예약하기-->
  <insert id="reserveMenu">
    insert into selected_menu (reservation_idx, menu_idx, menu_quantity)
    values (#{reservationIdx}, #{menuIdx}, #{menuQuantity});
  </insert>

  <select id="isSeatAvailable" resultType="int">
    select count(*)
    from reservation as r
    join selected_seat as s
    on r.reservation_idx = s.reservation_idx
    where r.res_idx = #{shortPathIdx}
    and r.rsv_time = "10:00";
  </select>

  <select id="reservedSeat" resultType="int">
    select count(*) from seat_table where res_idx=#{shortPathIdx};
  </select>

  <select id="getStoreLocation" resultType="com.example.team3_final_project_server.dto.RestaurantDTO">
    select * from restaurant;
  </select>

  <select id="loadSeat" parameterType="int" resultType="com.example.team3_final_project_server.dto.SeatDTO">
    SELECT seat_id As seatId, res_idx AS resIdx, type, name, x, y, image, is_selected As isSelected
    FROM seat_table
    WHERE res_idx = #{resIdx}
  </select>

  <select id="getReg" resultType="com.example.team3_final_project_server.dto.ReservationDTO">
    select * from reservation where reservation_idx = #{reservationIdx};
  </select>

  <!--  조인용 map-->
  <resultMap id="ResvSelectMenuJoinMap"
             type="com.example.team3_final_project_server.dto.join.ReservationSelectedMenuMenuJoinDTO">
    <association property="menu" javaType="com.example.team3_final_project_server.dto.MenuDTO">
      <result column="menu_name" property="menuName"/>
    </association>
    <association property="selectedMenu" javaType="com.example.team3_final_project_server.dto.SelectedMenuDTO">
      <result column="menu_quantity" property="menuQuantity"/>
    </association>
  </resultMap>

  <select id="getMenuInfo" resultMap="ResvSelectMenuJoinMap">
    select m.menu_name, sm.menu_quantity
    from reservation as r
    join selected_menu as sm
    join menu as m
    on r.reservation_idx = sm.reservation_idx
    and sm.menu_idx = m.menu_idx
    where r.reservation_idx=#{reservationIdx};
  </select>

  <!--  조인용 map-->
  <resultMap id="reservationRestaurantJoinMap"
             type="com.example.team3_final_project_server.dto.join.ReservationRestaurantJoinDTO">
    <association property="restaurantDTO" javaType="com.example.team3_final_project_server.dto.RestaurantDTO">
      <result column="res_name" property="resName"/>
      <result column="res_introduce" property="resIntroduce"/>
    </association>
  </resultMap>

  <select id="getStoreInfo" resultMap="reservationRestaurantJoinMap">
    select rst.res_name, rst.res_introduce
    from reservation as res
    join restaurant as rst
    on res.res_idx = rst.res_idx
    where res.reservation_idx = #{reservationIdx};
  </select>
</mapper>